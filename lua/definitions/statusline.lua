--- Type definitions for the statusline.
---@meta

--- Statusline state variable(s).
---@class statusline.state
---
--- Should we attach to new windows?
---@field enable boolean
---
--- State of attached windows.
---   true -> Attached & rendering.
---   false -> Attached only.
---@field attached_windows table<integer, boolean>

-----------------------------------------------------------------------------

--- Statusline configuration table.
---@class statusline.config
---
--- Filetypes to ignore.
---@field ignore_filetypes? string[]
--- Buftypes to ignore.
---@field ignore_buftypes? string[]
---
--- Additional condition for attaching to new windows.
---@field condition? fun(buffer: integer, window: integer): boolean | nil
---
--- Default style.
---@field default statusline_style
---
--- Custom style.
---@field [string] statusline_style


---@alias statusline_style
---| statusline.parts.section
---| statusline.parts.ruler
---| statusline.parts.mode
---| statusline.parts.diagnostics
---| statusline.parts.branch
---| statusline.parts.bufname
---| statusline.parts.custom

-----------------------------------------------------------------------------

--- Shows current git branch.
---@class statusline.parts.branch
---
--- Optional condition for this part.
---@field condition? boolean | fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind "branch"
---
--- Delay(in milliseconds) between branch
--- name updates.
---@field throttle? integer
---
--- Default configuration for git branch.
---@field default branch.opts
---
--- Configuration for branches whose name
--- matches `string`.
---@field [string] branch.opts


--- Git branch part options.
--- Drawn like so,
---
---```txt
--- abc----de
--- │││    │└ corner_right
--- │││    └ padding_right
--- ││└ icon
--- │└ padding_left
--- └ corner_left
---```
---@class branch.opts
---
---@field corner_left? string
---@field padding_left? string
---
--- Alternate branch name.
---@field text? string
---@field icon? string
---
---@field padding_right? string
---@field corner_right? string
---
--- Primary highlight group.
---@field hl? string
---
---@field corner_left_hl? string
---@field padding_left_hl? string
---
---@field icon_hl? string
---
---@field padding_right_hl? string
---@field corner_right_hl? string

-----------------------------------------------------------------------------

--- Shows buffer name.
---@class statusline.parts.bufname
---
--- Optional condition for this part.
---@field condition? boolean | fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind "bufname"
---
--- Maximum name length.
---@field max_len? integer
---
--- Symbol used to show truncation.
---@field truncate_symbol? string
---
---@field default bufname.opts
---@field [string] bufname.opts


--- Buffer name part options.
--- Drawn like so,
---
---```txt
--- abc----de
--- │││    │└ corner_right
--- │││    └ padding_right
--- ││└ icon / nomodifiable_icon
--- │└ padding_left
--- └ corner_left
---```
---@class bufname.opts
---
---@field corner_left? string
---@field padding_left? string
---
--- Alternate branch name.
---@field text? string
---@field icon? string
---
--- Icon for 'nomodifiable' buffers.
---@field nomodifiable_icon? string
---
---@field padding_right? string
---@field corner_right? string
---
--- Primary highlight group.
---@field hl? string
---
---@field corner_left_hl? string
---@field padding_left_hl? string
---
---@field icon_hl? string
---
--- Highlight group for `nomodifiable_icon`
---@field nomodifiable_icon_hl? string
---
---@field padding_right_hl? string
---@field corner_right_hl? string

-----------------------------------------------------------------------------

--- Shows diagnostics count.
---@class statusline.parts.diagnostics
---
--- Optional condition for this part.
---@field condition? boolean | fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind "diagnostics"
---
--- Should this part be automatically hidden?
---
--- > This part gets hidden if a buffer has
--- > no client attached to it.
---@field auto_hide? boolean
---
--- Determines what type of diagnostics are
--- shown.
---@field default_mode?
---| 1 Error
---| 2 Warning
---| 3 Info
---| 4 Hint
---| 5 All of the above
---
---@field error_icon? string
---@field error_hl? string
---
---@field warn_icon? string
---@field warn_hl? string
---
---@field info_icon? string
---@field info_hl? string
---
---@field hint_icon? string
---@field hint_hl? string
---
--- Icon to show when no diagnostics are available.
---@field empty_icon? string
---
--- Text to show when no diagnostics are available.
---@field empty_text? string
---
--- Highlight group to use when no diagnostics are
--- available.
---@field empty_hl? string
---
--- Text used as separator between each diagnostics
--- type.
---@field separator? string
---
--- Highlight group for the separator.
---@field separator_hl? string
---
--- Left corner of the part. 
---@field corner_left? string
---@field corner_left_hl? string
---
--- Left padding of the part. 
---@field padding_left? string
---@field padding_left_hl? string
---
--- Right padding of the part. 
---@field padding_right? string
---@field padding_right_hl? string
---
--- Right corner of the part. 
---@field corner_right? string
---@field corner_right_hl? string
---
--- Primary highlight group for the part
---@field hl? string

-----------------------------------------------------------------------------

--- Empty space.
---@class statusline.parts.empty
---
--- Optional condition for this part.
---@field condition? boolean | fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind "empty"
---
--- Highlight group for this part.
---@field hl? string

-----------------------------------------------------------------------------

--- Shows current mode.
---@class statusline.parts.mode
---
--- Optional condition for this part.
---@field condition? boolean | fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind "mode"
---
--- Should we show a compact version?
---@field compact? boolean | fun(buffer: integer, window: integer): boolean
---
---@field default mode.opts
---@field [string] mode.opts


--- Mode name part options.
--- Drawn like so,
---
---```txt
--- abc----de
--- │││    │└ corner_right
--- │││    └ padding_right
--- ││└ icon
--- │└ padding_left
--- └ corner_left
---```
---@class mode.opts
---
---@field corner_left? string
---@field padding_left? string
---
--- Mode name.
---@field text? string
---@field icon? string
---
---@field padding_right? string
---@field corner_right? string
---
--- Primary highlight group.
---@field hl? string
---
---@field corner_left_hl? string
---@field padding_left_hl? string
---
---@field icon_hl? string
---
---@field padding_right_hl? string
---@field corner_right_hl? string

-----------------------------------------------------------------------------

--- Custom section for the statusline.
--- Drawn like so,
---
---```txt
--- abc-de
--- │││││└ corner_right
--- ││││└ padding_right
--- │││└ text
--- ││└ icon
--- │└ padding_left
--- └ corner_left
---@class statusline.parts.section
---
--- Condition for this part.
---@field condition? fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind? "section"
---
--- Reference to a click handler.
---@field click? string
---
---@field corner_left? string
---@field padding_left? string
---@field icon? string
---
---@field text? string
---
---@field padding_right? string
---@field corner_right? string
---
--- Primary highlight group
---@field hl? string
---
---@field corner_left_hl? string
---@field padding_left_hl? string
---@field icon_hl? string
---
---@field text_hl? string
---
---@field padding_right_hl? string
---@field corner_right_hl? string

-----------------------------------------------------------------------------

--- Custom ruler.
---@class statusline.parts.ruler
---
--- Optional condition for this part.
---@field condition? boolean | fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind "ruler"
---
--- Should visual modes be shown
---@field mode
---| "normal" Show cursor position.
---| "visual" Show selection size.
---| fun(buffer: integer, window: integer): ( "normal" | "visual" )
---
--- Default configuration.
---@field default ruler.opts
---
--- Configuration for visual modes.
---@field visual ruler.opts


--- Ruler part options.
--- Drawn like so,
---
---```txt
--- abcXX-YYde
--- │││  │  │└ corner_right
--- │││  │  └ padding_right
--- │││  └ separator
--- ││└ icon
--- │└ padding_left
--- └ corner_left
---@class ruler.opts
---
---@field corner_left? string
---@field padding_left? string
---
---@field icon? string
---
--- Separator between texts.
---@field separator? string
---
---@field padding_right? string
---@field corner_right? string
---
---
---@field corner_left_hl? string
---@field padding_left_hl? string
---
---@field icon_hl? string
---@field separator_hl? string
---
---@field padding_right_hl? string
---@field corner_right_hl? string
---
--- Primary highlight group.
---@field hl? string


--- Custom statusline part.
---@class statusline.parts.custom
---
--- Optional condition for this part.
---@field condition? boolean | fun(buffer: integer, window: integer): boolean
---
--- What kind of part is this?
---@field kind "ruler"
---
--- Text to show for this part.
---@field value fun(buffer: integer, window: integer): string

